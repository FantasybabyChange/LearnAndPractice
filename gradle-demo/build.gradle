apply plugin:'java'
//apply plugin:'war'
/*plugins {
    id "base"
}*/
/* 
println "In posdevice, gradle id is " +gradle.hashCode()  
println "Home Dir:" + gradle.gradleHomeDir  
println "User Home Dir:" + gradle.gradleUserHomeDir  
println "Parent: " + gradle.parent
 */

/* task zip(type: Zip, group: "Archive", description: "Archives sources in a zip file") {
    println "start task zip"
    from "src"
} */

/* task helloworld{
    doLast{
    println 'hello world'    
    }
} */
task helloWorld <<{
//    inputs.property('')
//    outputs.file
    println 'hello world'    
}

task depenceHelloWorld<<{
    print "depenceHelloWorld"
}
task wrapper(type:Wrapper){
    gradleVersion='4.6'
    distributionUrl=''
    distributionPath='gradle-dists'
}

task zipFile(type:Zip,group:"build"){
    print 'start zipFile'
    from "src"
    destinationDir file("dest")
}
task copyFile(type:Copy,group:"build"){
    print 'start copy'
    from "src"
    into "dest"
}
task cleanFile(type:Delete,group:"build"){
    delete "dest"
}
copyFile.dependsOn cleanFile
zipFile.dependsOn copyFile
depenceHelloWorld.dependsOn(helloWorld)
repositories {
    mavenLocal()
    maven{
        name 'aliyun'
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
}
ext{
    commonVersion = '3.1'
    springVersion = '4.3.12.RELEASE'


}
/**
 * 自定义配置
 */
configurations {
    xige{
       description='start xige'
       visible = false
    }

}
/**
 * 查看 dependencies所在位置
 */
task printCompileDependencies(group: "help") <<{
    configurations.getByName("compile").each {
        dependency -> println dependency
    }
}
configurations.all {
    resolutionStrategy {  failOnVersionConflict() }
}
dependencies {
    compile group:'org.apache.commons',name:'commons-lang3',version:commonVersion
    /**
     * 排除spring-bean的依赖
     */
    compile ("org.springframework:spring-context:$springVersion"){
//        exclude group:"org.springframework",module:"spring-beans"
//        compile group:'b',name:'b',version:'1.1',force:true
        /**
         * 关闭所有的依赖传递
         */
//        transitive=false
    }
}